{"version":3,"sources":["Header.js","Moreinfo.js","Tabs.js","CardComponent.js","HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","data","className","to","Moreinfo","console","log","useState","loading","setLoading","character","setcharacter","url","window","location","href","slice","lastIndexOf","length","urlSpellPath","useEffect","Axios","get","then","response","id","title","style","color","width","src","spells","Card","disabled","CardActionArea","CardContent","Typography","gutterBottom","variant","component","name","description","Tabs","setGetData","filterData","obj","champName","tags","includes","Button","onClick","CardComponent","getData","Object","keys","map","key","image","full","HomePage","App","champ","setChamp","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAYeA,EARA,SAAC,GAAa,EAAXC,KACd,OACI,qBAAKC,UAAU,UAAf,SACI,qBAAIA,UAAU,OAAd,cAAuB,cAAC,IAAD,CAAMC,GAAG,UAAT,0CAAvB,U,iDC4GGC,EA1GE,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAChBI,QAAQC,IAAIL,GAEZ,MAA8BM,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EAAMC,OAAOC,SAASC,KAAKC,MAAMH,OAAOC,SAASC,KAAKE,YAAY,KAAO,EAAGJ,OAAOC,SAASC,KAAKG,QACjGC,EAAe,6DAcrB,OAJAC,qBAAU,WAPNX,GAAW,GACXY,IAAMC,IAAI,uEAAyEV,EAAM,SAASW,MAAK,SAACC,GACpGb,EAAaa,EAASvB,KAAKA,KAAKW,IAChCH,GAAW,QAMhB,IAGC,mCACKD,EACG,uDAEA,sBAAKN,UAAU,UAAf,UACI,qBAAIA,UAAU,QAAd,UAAuBQ,EAAUe,GAAjC,MAAwCf,EAAUgB,SAClD,oBAAIxB,UAAU,QAAQyB,MAAO,CAAEC,MAAO,QAASC,MAAO,UACtD,qBAAK3B,UAAU,UAAU2B,MAAM,MAAMC,IAAK,+DAAiEpB,EAAUe,GAAK,WAExHf,EAAUqB,OAER,sBAAK7B,UAAU,YAAf,UACI,eAAC8B,EAAA,EAAD,CAAMC,UAAQ,EAAC/B,UAAU,OAAzB,UACI,mCACA,eAACgC,EAAA,EAAD,WACI,qBAAKhC,UAAU,QAAQ2B,MAAM,KAAKC,IAAKX,EAAeT,EAAUqB,OAAO,GAAGN,GAAK,SAC/E,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACK7B,EAAUqB,OAAO,GAAGS,OAEzB,cAACJ,EAAA,EAAD,CAAYE,QAAQ,QAAQV,MAAM,gBAAgBW,UAAU,IAA5D,SACK7B,EAAUqB,OAAO,GAAGU,uBAMrC,eAACT,EAAA,EAAD,CAAM9B,UAAU,OAAhB,UACI,mCACA,eAACgC,EAAA,EAAD,WACI,qBAAKhC,UAAU,QAAQ2B,MAAM,KAAKC,IAAKX,EAAeT,EAAUqB,OAAO,GAAGN,GAAK,SAC/E,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACK7B,EAAUqB,OAAO,GAAGS,OAEzB,cAACJ,EAAA,EAAD,CAAYE,QAAQ,QAAQV,MAAM,gBAAgBW,UAAU,IAA5D,SACK7B,EAAUqB,OAAO,GAAGU,uBAOrC,eAACT,EAAA,EAAD,CAAM9B,UAAU,OAAhB,UACI,mCACA,eAACgC,EAAA,EAAD,WACI,qBAAKhC,UAAU,QAAQ2B,MAAM,KAAKC,IAAKX,EAAeT,EAAUqB,OAAO,GAAGN,GAAK,SAC/E,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACK7B,EAAUqB,OAAO,GAAGS,OAEzB,cAACJ,EAAA,EAAD,CAAYE,QAAQ,QAAQV,MAAM,gBAAgBW,UAAU,IAA5D,SACK7B,EAAUqB,OAAO,GAAGU,uBAOrC,eAACT,EAAA,EAAD,CAAM9B,UAAU,OAAhB,UACI,mCACA,eAACgC,EAAA,EAAD,WACI,qBAAKhC,UAAU,QAAQ2B,MAAM,KAAKC,IAAKX,EAAeT,EAAUqB,OAAO,GAAGN,GAAK,SAC/E,eAACU,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACK7B,EAAUqB,OAAO,GAAGS,OAEzB,cAACJ,EAAA,EAAD,CAAYE,QAAQ,QAAQV,MAAM,gBAAgBW,UAAU,IAA5D,SACK7B,EAAUqB,OAAO,GAAGU,0BA3DxB,iD,iBCL1BC,EA/BF,SAAC,GAA0B,IAAxBzC,EAAuB,EAAvBA,KAAM0C,EAAiB,EAAjBA,WAElB,SAASC,EAAWJ,GAChB,IAAIK,EAAM,GAEV,GAAa,KAATL,EACA,IAAK,IAAMM,KAAa7C,EAChBA,EAAK6C,GAAWC,KAAKC,SAASR,KAC9BK,EAAIC,GAAa7C,EAAK6C,SAI9BD,EAAM5C,EAEV0C,EAAWE,GAGf,OACI,sBAAK3C,UAAU,UAAf,UACI,cAAC+C,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAW,KAAKhB,MAAM,UAA7C,SAAuD,sCAEvD,cAACqB,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAW,aAAahB,MAAM,UAArD,SAA+D,2CAC/D,cAACqB,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAW,SAAShB,MAAM,UAAjD,SAA2D,wCAC3D,cAACqB,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAW,YAAYhB,MAAM,UAApD,SAA8D,2CAC9D,cAACqB,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAW,aAAahB,MAAM,UAArD,SAA+D,4CAC/D,cAACqB,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAW,YAAYhB,MAAM,UAApD,SAA8D,2CAC9D,cAACqB,EAAA,EAAD,CAAQC,QAAS,kBAAMN,EAAW,SAAShB,MAAM,UAAjD,SAA2D,4CCRxDuB,G,MAjBO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OACI,mCACMA,EAA8BC,OAAOC,KAAKF,GAASG,KAAI,SAAAC,GACrD,OAAO,sBAAKtD,UAAU,OAAf,UACH,oBAAIA,UAAU,SAAd,SAAyBsD,IACzB,qBAAKtD,UAAU,SAAS4B,IAAK,gEAAkEsB,EAAQI,GAAKC,MAAMC,OAClH,cAAC,IAAD,CAAMvD,GAAE,oBAAeiD,EAAQI,GAAK/B,IAApC,SACI,cAACwB,EAAA,EAAD,CAAQ/C,UAAU,WAAWoC,QAAQ,YAAYV,MAAM,UAAvD,SAAiE,oDALhE,4CCWV+B,EAZE,SAAC,GAAc,IAAZ1D,EAAW,EAAXA,KAChB,EAA8BM,mBAASN,GAAvC,mBAAOmD,EAAP,KAAgBT,EAAhB,KACA,OACI,qCACI,cAAC,EAAD,CAAM1C,KAAMA,EAAM0C,WAAYA,IAC9B,qBAAKzC,UAAU,iBAAf,SACI,cAAC,EAAD,CAAekD,QAASA,UCqCzBQ,MA1Cf,WAEE,MAA0BrD,mBAAS,IAAnC,mBAAOsD,EAAP,KAAcC,EAAd,KACA,EAA8BvD,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBAASsD,GAAjD,mBAcA,OAdA,UAWAzC,qBAAU,WAPRX,GAAW,GACXY,IAAMC,IAAI,2EAA2EC,MAAK,SAACC,GACzFsC,EAAStC,EAASvB,KAAKA,MACvBQ,GAAW,QAMZ,IAED,mCACGD,EAEC,uDAEA,cAAC,IAAD,UACE,sBAAKN,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,KAAM4D,IACd,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,UAAUzB,UAAW,kBAAM,cAAC,EAAD,CAAUtC,KAAM4D,OAC7D,cAAC,IAAD,CAAOG,KAAK,gBAAgBzB,UAAW,kBAAM,cAAC,EAAD,CAAUtC,KAAM4D,kBCzB5DI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5C,MAAK,YAAkD,IAA/C6C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.52f80b45.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Header.css\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = ({ data }) => {\r\n    return (\r\n        <div className=\"primary\">\r\n            <h1 className=\"Name\" > <Link to=\"/lolapp\">Leauge of Legends Champions </Link> </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import Axios from \"axios\"\r\nimport React from 'react'\r\nimport \"./Moreinfo.css\"\r\nimport { useState, useEffect } from \"react\"\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Moreinfo = ({ data }) => {\r\n    console.log(data)\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [character, setcharacter] = useState(\"\");\r\n\r\n    const url = window.location.href.slice(window.location.href.lastIndexOf('/') + 1, window.location.href.length);\r\n    const urlSpellPath = \"https://ddragon.leagueoflegends.com/cdn/10.16.1/img/spell/\";\r\n\r\n    const getChamp = () => {\r\n        setLoading(true);\r\n        Axios.get(\"https://ddragon.leagueoflegends.com/cdn/10.16.1/data/en_US/champion/\" + url + \".json\").then((response) => {\r\n            setcharacter(response.data.data[url]);\r\n            setLoading(false);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getChamp();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {loading ? (\r\n                <div>...Data Loading.....</div>\r\n            ) :\r\n                <div className=\"NiChamp\">\r\n                    <h2 className=\"Title\">{character.id} : {character.title}</h2>\r\n                    <hr className=\"lineg\" style={{ color: 'black', width: \"100%\" }} />\r\n                    <img className=\"mainimg\" width=\"500\" src={\"https://ddragon.leagueoflegends.com/cdn/img/champion/splash/\" + character.id + \"_0.jpg\"} />\r\n\r\n                    {!character.spells ? <p>loading...</p> :\r\n\r\n                        <div className=\"container\">\r\n                            <Card disabled className=\"card\">\r\n                                <h2>Q</h2>\r\n                                <CardActionArea>\r\n                                    <img className=\"image\" width=\"80\" src={urlSpellPath + character.spells[0].id + \".png\"}></img>\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {character.spells[0].name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            {character.spells[0].description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n\r\n                            <Card className=\"card\">\r\n                                <h2>W</h2>\r\n                                <CardActionArea>\r\n                                    <img className=\"image\" width=\"80\" src={urlSpellPath + character.spells[1].id + \".png\"}></img>\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {character.spells[1].name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            {character.spells[1].description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n\r\n\r\n                            <Card className=\"card\">\r\n                                <h2>E</h2>\r\n                                <CardActionArea>\r\n                                    <img className=\"image\" width=\"80\" src={urlSpellPath + character.spells[2].id + \".png\"}></img>\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {character.spells[2].name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            {character.spells[2].description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n\r\n\r\n                            <Card className=\"card\">\r\n                                <h2>R</h2>\r\n                                <CardActionArea>\r\n                                    <img className=\"image\" width=\"80\" src={urlSpellPath + character.spells[3].id + \".png\"}></img>\r\n                                    <CardContent>\r\n                                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                            {character.spells[3].name}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                            {character.spells[3].description}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </CardActionArea>\r\n                            </Card>\r\n\r\n                        </div>\r\n\r\n                    }\r\n\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Moreinfo\r\n","\r\nimport \"./Tabs.css\"\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Tabs = ({ data, setGetData }) => {\r\n\r\n    function filterData(name) {\r\n        let obj = {};\r\n\r\n        if (name !== \"\") {\r\n            for (const champName in data) {\r\n                if (data[champName].tags.includes(name)) {\r\n                    obj[champName] = data[champName];\r\n                }\r\n            }\r\n        } else {\r\n            obj = data;\r\n        }\r\n        setGetData(obj);\r\n    }\r\n\r\n    return (\r\n        <div className=\"TabVert\">\r\n            <Button onClick={() => filterData(\"\")} color=\"primary\"><b>ALL</b></Button>\r\n\r\n            <Button onClick={() => filterData(\"Assassin\")} color=\"primary\"><b>Assasins</b></Button>\r\n            <Button onClick={() => filterData(\"Mage\")} color=\"primary\"><b>Mages</b></Button>\r\n            <Button onClick={() => filterData(\"Fighter\")} color=\"primary\"><b>Fighters</b></Button>\r\n            <Button onClick={() => filterData(\"Marksman\")} color=\"primary\"><b>Marksmans</b></Button>\r\n            <Button onClick={() => filterData(\"Support\")} color=\"primary\"><b>Supports</b></Button>\r\n            <Button onClick={() => filterData(\"Tank\")} color=\"primary\"><b>Tanks</b></Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tabs\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport \"./Card.css\"\r\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\r\n\r\nconst CardComponent = ({ getData }) => {\r\n    return (\r\n        <>\r\n            {!getData ? (<p>loading</p>) : (Object.keys(getData).map(key => {\r\n                return <div className=\"Each\">\r\n                    <h3 className=\"ChampN\" >{key}</h3>\r\n                    <img className=\"imageb\" src={\"https://ddragon.leagueoflegends.com/cdn/10.16.1/img/champion/\" + getData[key].image.full} />\r\n                    <Link to={`/MoreInfo/${getData[key].id}`}>\r\n                        <Button className=\"infobutt\" variant=\"contained\" color=\"primary\"><b>More Info</b></Button>\r\n                    </Link>\r\n                </div>\r\n            }))}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CardComponent\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport Tabs from \"./Tabs\"\r\nimport CardComponent from \"./CardComponent\"\r\nimport \"./App.css\"\r\n\r\n\r\nconst HomePage = ({ data }) => {\r\n    const [getData, setGetData] = useState(data);\r\n    return (\r\n        <>\r\n            <Tabs data={data} setGetData={setGetData} />\r\n            <div className=\"imageContainer\">\r\n                <CardComponent getData={getData} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HomePage\r\n","import Axios from \"axios\"\r\nimport { useState, useEffect } from \"react\"\r\nimport \"./App.css\"\r\nimport Header from \"./Header\"\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Moreinfo from \"./Moreinfo\"\r\nimport HomePage from \"./HomePage\";\r\n\r\nfunction App() {\r\n\r\n  const [champ, setChamp] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [FilteredData, setFilteredData] = useState(champ)\r\n\r\n\r\n  const getChamp = () => {\r\n    setLoading(true);\r\n    Axios.get(\"https://ddragon.leagueoflegends.com/cdn/9.18.1/data/en_US/champion.json\").then((response) => {\r\n      setChamp(response.data.data);\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChamp();\r\n  }, []);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n\r\n        <div>...Data Loading.....</div>\r\n      ) : (\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header data={champ} />\r\n            <Switch>\r\n              <Route exact path=\"/lolapp\" component={() => <HomePage data={champ} />} />\r\n              <Route path=\"/Moreinfo/:id\" component={() => <Moreinfo data={champ} />} />\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n\r\n      )\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}